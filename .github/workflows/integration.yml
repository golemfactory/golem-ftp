

name: Integration tests

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "42 3 * * *"

jobs:
  golem-ftp:
    name: Golem ftp build only
    timeout-minutes: 20

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build golem ftp
        run: cargo build --profile=release-fast

      - name: Compress binary
        run: |
          cd target/release-fast
          tar -cJf gftp.tar.xz gftp

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: gftp.tar.xz
          path: target/release-fast/gftp.tar.xz

  core-test:
    name: Publish/download file
    timeout-minutes: 20

    runs-on: ubuntu-latest
    needs: golem-ftp

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: gftp.tar.xz

      - name: Extract binary
        run: |
          tar -xf gftp.tar.xz

      - name: Generate ethereum accounts
        run: |
          mkdir /accounts && cd /accounts
          wget -qO- https://github.com/golemfactory/erc20_payment_lib/releases/download/v0.4.3/erc20_processor-linux-x86_64.tar.xz | tar -xJ
          ./erc20_processor generate-key -n 5 > .env
          cat .env | grep ETH_ADDRESS | sed "s/#\s//g" | sed "s/:\s/=/g" > $GITHUB_ENV
          cat .env | grep ETH_PRIVATE_KEY_ | sed "s/#\s//g" | sed "s/:\s/=/g" >> $GITHUB_ENV

      - name: Run dockers
        run: |
          cd integration
          docker-compose up -d
          sleep 10

      - name: Generate test file
        run: |
          cd integration
          python gen_random.py

      - name: Publish file
        run: |
          ./gftp publish integration/random_file.txt &
          sleep 3
        env:
          GSB_URL: tcp://127.0.0.1:11000
          GFTP_PROGRESS_INTERVAL: 5000

      - name: Set qos
        run: |
          docker exec integration_yagna1_1 tc qdisc add dev eth0 root netem delay 200ms 50ms distribution normal
          docker exec integration_yagna1_1 tc qdisc change dev eth0 root netem loss 50.3% 25%
          docker exec integration_yagna1_1 ifconfig
          docker exec integration-yagna1-1 ping -c 20 -i 0.1 www.google.pl
      - name: Download file
        run: |
          ./gftp download gftp://${ETH_ADDRESS_1}/5f9f37dfdbe11ad9e28a975b9a0b64566de62bd6 integration/random_file2.txt
        env:
          GSB_URL: tcp://127.0.0.1:11001
          GFTP_PROGRESS_INTERVAL: 5000

      - name: Check sha1 of downloaded file
        run: |
          sha1sum integration/random_file.txt | cut -d ' ' -f 1 > integration/random_file.txt.sha1
          sha1sum integration/random_file2.txt | cut -d ' ' -f 1 > integration/random_file2.txt.sha1
          diff integration/random_file.txt.sha1 integration/random_file2.txt.sha1

  pytest:
    name: Publish/download file using python driver
    timeout-minutes: 20

    runs-on: ubuntu-latest
    needs: golem-ftp

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate ethereum accounts
        run: |
          mkdir /accounts && cd /accounts
          wget -qO- https://github.com/golemfactory/erc20_payment_lib/releases/download/v0.4.3/erc20_processor-linux-x86_64.tar.xz | tar -xJ
          ./erc20_processor generate-key -n 5 > .env
          cat .env | grep ETH_ADDRESS | sed "s/#\s//g" | sed "s/:\s/=/g" > $GITHUB_ENV
          cat .env | grep ETH_PRIVATE_KEY_ | sed "s/#\s//g" | sed "s/:\s/=/g" >> $GITHUB_ENV

      # Poetry install give time to the docker to start, be careful with timings
      - name: Run dockers
        run: |
          cd integration
          docker-compose up -d

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: gftp.tar.xz

      - name: Extract binary
        run: |
          tar -xf gftp.tar.xz

      # Poetry install give time to the docker to start, be careful with timings
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2

      - name: Build golem py ftp
        run: |
          cd pygftp
          poetry install
          poetry run python -u pygftp
        env:
          GFTP_BIN_PATH: ${{ github.workspace }}/gftp
          GSB_URL: tcp://127.0.0.1:11000